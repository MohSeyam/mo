// src/lib/BaseLineHeightPlugin.ts
import { BaseParagraphPlugin, createSlatePlugin } from "@udecode/plate";
var BaseLineHeightPlugin = createSlatePlugin({
  key: "lineHeight",
  inject: {
    isBlock: true,
    nodeProps: {
      defaultNodeValue: 1.5,
      nodeKey: "lineHeight"
    },
    targetPlugins: [BaseParagraphPlugin.key],
    targetPluginToInject: ({ editor, plugin }) => ({
      parsers: {
        html: {
          deserializer: {
            parse: ({ element }) => {
              if (element.style.lineHeight) {
                return {
                  [editor.getType(plugin)]: element.style.lineHeight
                };
              }
            }
          }
        }
      }
    })
  }
});

// src/lib/transforms/setLineHeight.ts
import {
  getInjectMatch
} from "@udecode/plate";
var setLineHeight = (editor, {
  setNodesOptions,
  value
}) => {
  const { defaultNodeValue, nodeKey } = editor.getInjectProps(BaseLineHeightPlugin);
  const match = getInjectMatch(editor, editor.getPlugin(BaseLineHeightPlugin));
  if (value === defaultNodeValue) {
    editor.tf.unsetNodes(nodeKey, {
      match,
      ...setNodesOptions
    });
  } else {
    editor.tf.setNodes(
      { [nodeKey]: value },
      {
        match,
        ...setNodesOptions
      }
    );
  }
};
export {
  BaseLineHeightPlugin,
  setLineHeight
};
//# sourceMappingURL=index.mjs.map