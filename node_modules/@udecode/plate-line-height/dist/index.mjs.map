{"version":3,"sources":["../src/lib/BaseLineHeightPlugin.ts","../src/lib/transforms/setLineHeight.ts"],"sourcesContent":["import { BaseParagraphPlugin, createSlatePlugin } from '@udecode/plate';\n\n/**\n * Enables support for text alignment, useful to align your content to left,\n * right and center it.\n */\nexport const BaseLineHeightPlugin = createSlatePlugin({\n  key: 'lineHeight',\n  inject: {\n    isBlock: true,\n    nodeProps: {\n      defaultNodeValue: 1.5,\n      nodeKey: 'lineHeight',\n    },\n    targetPlugins: [BaseParagraphPlugin.key],\n    targetPluginToInject: ({ editor, plugin }) => ({\n      parsers: {\n        html: {\n          deserializer: {\n            parse: ({ element }) => {\n              if (element.style.lineHeight) {\n                return {\n                  [editor.getType(plugin)]: element.style.lineHeight,\n                };\n              }\n            },\n          },\n        },\n      },\n    }),\n  },\n});\n","import {\n  type SetNodesOptions,\n  type SlateEditor,\n  getInjectMatch,\n} from '@udecode/plate';\n\nimport { BaseLineHeightPlugin } from '../BaseLineHeightPlugin';\n\nexport const setLineHeight = (\n  editor: SlateEditor,\n  {\n    setNodesOptions,\n    value,\n  }: { value: number; setNodesOptions?: SetNodesOptions }\n): void => {\n  const { defaultNodeValue, nodeKey } =\n    editor.getInjectProps(BaseLineHeightPlugin);\n\n  const match = getInjectMatch(editor, editor.getPlugin(BaseLineHeightPlugin));\n\n  if (value === defaultNodeValue) {\n    editor.tf.unsetNodes(nodeKey!, {\n      match,\n      ...setNodesOptions,\n    });\n  } else {\n    editor.tf.setNodes(\n      { [nodeKey!]: value },\n      {\n        match: match as any,\n        ...setNodesOptions,\n      }\n    );\n  }\n};\n"],"mappings":";AAAA,SAAS,qBAAqB,yBAAyB;AAMhD,IAAM,uBAAuB,kBAAkB;AAAA,EACpD,KAAK;AAAA,EACL,QAAQ;AAAA,IACN,SAAS;AAAA,IACT,WAAW;AAAA,MACT,kBAAkB;AAAA,MAClB,SAAS;AAAA,IACX;AAAA,IACA,eAAe,CAAC,oBAAoB,GAAG;AAAA,IACvC,sBAAsB,CAAC,EAAE,QAAQ,OAAO,OAAO;AAAA,MAC7C,SAAS;AAAA,QACP,MAAM;AAAA,UACJ,cAAc;AAAA,YACZ,OAAO,CAAC,EAAE,QAAQ,MAAM;AACtB,kBAAI,QAAQ,MAAM,YAAY;AAC5B,uBAAO;AAAA,kBACL,CAAC,OAAO,QAAQ,MAAM,CAAC,GAAG,QAAQ,MAAM;AAAA,gBAC1C;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF,CAAC;;;AC/BD;AAAA,EAGE;AAAA,OACK;AAIA,IAAM,gBAAgB,CAC3B,QACA;AAAA,EACE;AAAA,EACA;AACF,MACS;AACT,QAAM,EAAE,kBAAkB,QAAQ,IAChC,OAAO,eAAe,oBAAoB;AAE5C,QAAM,QAAQ,eAAe,QAAQ,OAAO,UAAU,oBAAoB,CAAC;AAE3E,MAAI,UAAU,kBAAkB;AAC9B,WAAO,GAAG,WAAW,SAAU;AAAA,MAC7B;AAAA,MACA,GAAG;AAAA,IACL,CAAC;AAAA,EACH,OAAO;AACL,WAAO,GAAG;AAAA,MACR,EAAE,CAAC,OAAQ,GAAG,MAAM;AAAA,MACpB;AAAA,QACE;AAAA,QACA,GAAG;AAAA,MACL;AAAA,IACF;AAAA,EACF;AACF;","names":[]}