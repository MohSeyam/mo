{"version":3,"sources":["../../src/react/LineHeightPlugin.tsx","../../src/lib/BaseLineHeightPlugin.ts","../../src/lib/transforms/setLineHeight.ts","../../src/react/hooks/useLineHeightDropdownMenu.ts"],"sourcesContent":["import { toPlatePlugin } from '@udecode/plate/react';\n\nimport { BaseLineHeightPlugin } from '../lib';\n\nexport const LineHeightPlugin = toPlatePlugin(BaseLineHeightPlugin);\n","import { BaseParagraphPlugin, createSlatePlugin } from '@udecode/plate';\n\n/**\n * Enables support for text alignment, useful to align your content to left,\n * right and center it.\n */\nexport const BaseLineHeightPlugin = createSlatePlugin({\n  key: 'lineHeight',\n  inject: {\n    isBlock: true,\n    nodeProps: {\n      defaultNodeValue: 1.5,\n      nodeKey: 'lineHeight',\n    },\n    targetPlugins: [BaseParagraphPlugin.key],\n    targetPluginToInject: ({ editor, plugin }) => ({\n      parsers: {\n        html: {\n          deserializer: {\n            parse: ({ element }) => {\n              if (element.style.lineHeight) {\n                return {\n                  [editor.getType(plugin)]: element.style.lineHeight,\n                };\n              }\n            },\n          },\n        },\n      },\n    }),\n  },\n});\n","import {\n  type SetNodesOptions,\n  type SlateEditor,\n  getInjectMatch,\n} from '@udecode/plate';\n\nimport { BaseLineHeightPlugin } from '../BaseLineHeightPlugin';\n\nexport const setLineHeight = (\n  editor: SlateEditor,\n  {\n    setNodesOptions,\n    value,\n  }: { value: number; setNodesOptions?: SetNodesOptions }\n): void => {\n  const { defaultNodeValue, nodeKey } =\n    editor.getInjectProps(BaseLineHeightPlugin);\n\n  const match = getInjectMatch(editor, editor.getPlugin(BaseLineHeightPlugin));\n\n  if (value === defaultNodeValue) {\n    editor.tf.unsetNodes(nodeKey!, {\n      match,\n      ...setNodesOptions,\n    });\n  } else {\n    editor.tf.setNodes(\n      { [nodeKey!]: value },\n      {\n        match: match as any,\n        ...setNodesOptions,\n      }\n    );\n  }\n};\n","import type { TElement } from '@udecode/plate';\n\nimport { useEditorRef, useEditorSelector } from '@udecode/plate/react';\n\nimport { BaseLineHeightPlugin, setLineHeight } from '../../index';\n\nexport const useLineHeightDropdownMenuState = () => {\n  const editor = useEditorRef();\n  const { defaultNodeValue, validNodeValues: values = [] } =\n    editor.getInjectProps(BaseLineHeightPlugin);\n\n  const value: string | undefined = useEditorSelector((editor) => {\n    if (editor.api.isCollapsed()) {\n      const entry = editor.api.block<TElement>();\n\n      if (entry) {\n        return (\n          values.find((item) => item === entry[0][BaseLineHeightPlugin.key]) ??\n          defaultNodeValue\n        );\n      }\n    }\n  }, []);\n\n  return {\n    value,\n    values,\n  };\n};\n\nexport const useLineHeightDropdownMenu = ({\n  value,\n}: ReturnType<typeof useLineHeightDropdownMenuState>) => {\n  const editor = useEditorRef();\n\n  return {\n    radioGroupProps: {\n      value,\n      onValueChange: (newValue: string) => {\n        setLineHeight(editor, {\n          value: Number(newValue),\n        });\n        editor.tf.focus();\n      },\n    },\n  };\n};\n"],"mappings":";AAAA,SAAS,qBAAqB;;;ACA9B,SAAS,qBAAqB,yBAAyB;AAMhD,IAAM,uBAAuB,kBAAkB;AAAA,EACpD,KAAK;AAAA,EACL,QAAQ;AAAA,IACN,SAAS;AAAA,IACT,WAAW;AAAA,MACT,kBAAkB;AAAA,MAClB,SAAS;AAAA,IACX;AAAA,IACA,eAAe,CAAC,oBAAoB,GAAG;AAAA,IACvC,sBAAsB,CAAC,EAAE,QAAQ,OAAO,OAAO;AAAA,MAC7C,SAAS;AAAA,QACP,MAAM;AAAA,UACJ,cAAc;AAAA,YACZ,OAAO,CAAC,EAAE,QAAQ,MAAM;AACtB,kBAAI,QAAQ,MAAM,YAAY;AAC5B,uBAAO;AAAA,kBACL,CAAC,OAAO,QAAQ,MAAM,CAAC,GAAG,QAAQ,MAAM;AAAA,gBAC1C;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF,CAAC;;;AC/BD;AAAA,EAGE;AAAA,OACK;AAIA,IAAM,gBAAgB,CAC3B,QACA;AAAA,EACE;AAAA,EACA;AACF,MACS;AACT,QAAM,EAAE,kBAAkB,QAAQ,IAChC,OAAO,eAAe,oBAAoB;AAE5C,QAAM,QAAQ,eAAe,QAAQ,OAAO,UAAU,oBAAoB,CAAC;AAE3E,MAAI,UAAU,kBAAkB;AAC9B,WAAO,GAAG,WAAW,SAAU;AAAA,MAC7B;AAAA,MACA,GAAG;AAAA,IACL,CAAC;AAAA,EACH,OAAO;AACL,WAAO,GAAG;AAAA,MACR,EAAE,CAAC,OAAQ,GAAG,MAAM;AAAA,MACpB;AAAA,QACE;AAAA,QACA,GAAG;AAAA,MACL;AAAA,IACF;AAAA,EACF;AACF;;;AF9BO,IAAM,mBAAmB,cAAc,oBAAoB;;;AGFlE,SAAS,cAAc,yBAAyB;AAIzC,IAAM,iCAAiC,MAAM;AAClD,QAAM,SAAS,aAAa;AAC5B,QAAM,EAAE,kBAAkB,iBAAiB,SAAS,CAAC,EAAE,IACrD,OAAO,eAAe,oBAAoB;AAE5C,QAAM,QAA4B,kBAAkB,CAACA,YAAW;AAC9D,QAAIA,QAAO,IAAI,YAAY,GAAG;AAC5B,YAAM,QAAQA,QAAO,IAAI,MAAgB;AAEzC,UAAI,OAAO;AACT,eACE,OAAO,KAAK,CAAC,SAAS,SAAS,MAAM,CAAC,EAAE,qBAAqB,GAAG,CAAC,KACjE;AAAA,MAEJ;AAAA,IACF;AAAA,EACF,GAAG,CAAC,CAAC;AAEL,SAAO;AAAA,IACL;AAAA,IACA;AAAA,EACF;AACF;AAEO,IAAM,4BAA4B,CAAC;AAAA,EACxC;AACF,MAAyD;AACvD,QAAM,SAAS,aAAa;AAE5B,SAAO;AAAA,IACL,iBAAiB;AAAA,MACf;AAAA,MACA,eAAe,CAAC,aAAqB;AACnC,sBAAc,QAAQ;AAAA,UACpB,OAAO,OAAO,QAAQ;AAAA,QACxB,CAAC;AACD,eAAO,GAAG,MAAM;AAAA,MAClB;AAAA,IACF;AAAA,EACF;AACF;","names":["editor"]}