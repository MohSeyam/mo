// src/lib/defaultsDeepToNodes.ts
import { applyDeepToNodes } from "@udecode/plate-core";
import defaults from "lodash/defaults.js";
var defaultsDeepToNodes = (options) => {
  applyDeepToNodes({ ...options, apply: defaults });
};

// src/lib/isType.ts
import castArray from "lodash/castArray.js";
var isType = (editor, node, key) => {
  const keys = castArray(key);
  const types = [];
  keys.forEach((_key) => types.push(editor.getType({ key: _key })));
  return types.includes(node?.type);
};

// src/lib/moveSelectionByOffset.ts
import { isHotkey } from "@udecode/plate-core";
import { moveSelection } from "@udecode/slate";
import { Range } from "slate";
var moveSelectionByOffset = (editor, {
  event,
  query = () => true
}) => {
  const { selection } = editor;
  if (!selection || Range.isExpanded(selection) || !query(editor)) {
    return false;
  }
  if (isHotkey("left", event)) {
    event.preventDefault();
    moveSelection(editor, { reverse: true, unit: "offset" });
    return true;
  }
  if (isHotkey("right", event)) {
    event.preventDefault();
    moveSelection(editor, { unit: "offset" });
    return true;
  }
};
export {
  defaultsDeepToNodes,
  isType,
  moveSelectionByOffset
};
//# sourceMappingURL=index.mjs.map