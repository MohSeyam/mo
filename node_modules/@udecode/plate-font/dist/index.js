"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var index_exports = {};
__export(index_exports, {
  BaseFontBackgroundColorPlugin: () => BaseFontBackgroundColorPlugin,
  BaseFontColorPlugin: () => BaseFontColorPlugin,
  BaseFontFamilyPlugin: () => BaseFontFamilyPlugin,
  BaseFontSizePlugin: () => BaseFontSizePlugin,
  BaseFontWeightPlugin: () => BaseFontWeightPlugin,
  setBlockBackgroundColor: () => setBlockBackgroundColor,
  setFontSize: () => setFontSize,
  toUnitLess: () => toUnitLess
});
module.exports = __toCommonJS(index_exports);

// src/lib/BaseFontBackgroundColorPlugin.ts
var import_plate = require("@udecode/plate");
var BaseFontBackgroundColorPlugin = (0, import_plate.createSlatePlugin)({
  key: "backgroundColor",
  inject: {
    nodeProps: {
      nodeKey: "backgroundColor"
    }
  },
  parsers: {
    html: {
      deserializer: {
        isLeaf: true,
        rules: [
          {
            validStyle: {
              backgroundColor: "*"
            }
          }
        ],
        parse: ({ element, type }) => ({
          [type]: element.style.backgroundColor
        })
      }
    }
  }
});

// src/lib/BaseFontColorPlugin.ts
var import_plate2 = require("@udecode/plate");
var BaseFontColorPlugin = (0, import_plate2.createSlatePlugin)({
  key: "color",
  inject: {
    nodeProps: {
      defaultNodeValue: "black",
      nodeKey: "color"
    }
  },
  parsers: {
    html: {
      deserializer: {
        isLeaf: true,
        rules: [
          {
            validStyle: {
              color: "*"
            }
          }
        ],
        parse({ element, type }) {
          if (element.style.color) {
            return { [type]: element.style.color };
          }
        }
      }
    }
  }
});

// src/lib/BaseFontFamilyPlugin.ts
var import_plate3 = require("@udecode/plate");
var BaseFontFamilyPlugin = (0, import_plate3.createSlatePlugin)({
  key: "fontFamily",
  inject: {
    nodeProps: {
      nodeKey: "fontFamily"
    }
  },
  parsers: {
    html: {
      deserializer: {
        isLeaf: true,
        rules: [
          {
            validStyle: {
              fontFamily: "*"
            }
          }
        ],
        parse: ({ element, type }) => ({ [type]: element.style.fontFamily })
      }
    }
  }
});

// src/lib/BaseFontSizePlugin.ts
var import_plate4 = require("@udecode/plate");

// src/lib/transforms/setBlockBackgroundColor.ts
var setBlockBackgroundColor = (editor, block, backgroundColor) => {
  editor.tf.setNodes(
    { [BaseFontBackgroundColorPlugin.key]: backgroundColor },
    { at: block[1] }
  );
};

// src/lib/transforms/setFontSize.ts
var setFontSize = (editor, fontSize) => {
  editor.tf.addMarks({
    [BaseFontSizePlugin.key]: fontSize
  });
};

// src/lib/BaseFontSizePlugin.ts
var BaseFontSizePlugin = (0, import_plate4.createTSlatePlugin)({
  key: "fontSize",
  inject: {
    nodeProps: {
      nodeKey: "fontSize"
    }
  },
  parsers: {
    html: {
      deserializer: {
        isLeaf: true,
        rules: [
          {
            validStyle: {
              fontSize: "*"
            }
          }
        ],
        parse: ({ element, type }) => ({ [type]: element.style.fontSize })
      }
    }
  }
}).extendApi(({ editor }) => ({
  setMark: (0, import_plate4.bindFirst)(setFontSize, editor)
}));

// src/lib/BaseFontWeightPlugin.ts
var import_plate5 = require("@udecode/plate");
var BaseFontWeightPlugin = (0, import_plate5.createSlatePlugin)({
  key: "fontWeight",
  inject: {
    nodeProps: {
      nodeKey: "fontWeight"
    }
  },
  parsers: {
    html: {
      deserializer: {
        isLeaf: true,
        rules: [
          {
            validStyle: {
              fontWeight: "*"
            }
          }
        ],
        parse: ({ element, type }) => ({ [type]: element.style.fontWeight })
      }
    }
  }
});

// src/lib/utils/toUnitLess.ts
var toUnitLess = (value) => {
  const match = /\d+/.exec(value);
  if (!match) return "0";
  const num = Number(match[0]);
  if (value.endsWith("rem")) {
    return (num * 16).toString();
  }
  return num.toString();
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  BaseFontBackgroundColorPlugin,
  BaseFontColorPlugin,
  BaseFontFamilyPlugin,
  BaseFontSizePlugin,
  BaseFontWeightPlugin,
  setBlockBackgroundColor,
  setFontSize,
  toUnitLess
});
//# sourceMappingURL=index.js.map