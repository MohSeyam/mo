import * as _udecode_plate_core from '@udecode/plate-core';
import { PluginConfig, TElement, SlateEditor } from '@udecode/plate';
import { TriggerComboboxPluginOptions } from '@udecode/plate-combobox';

type MentionConfig = PluginConfig<'mention', {
    insertSpaceAfterMention?: boolean;
} & TriggerComboboxPluginOptions, {}, {
    insert: {
        mention: (options: {
            search: string;
            value: any;
            key?: any;
        }) => void;
    };
}>;
declare const BaseMentionInputPlugin: _udecode_plate_core.SlatePlugin<PluginConfig<"mention_input", {}, {}, {}, {}>>;
/** Enables support for autocompleting @mentions. */
declare const BaseMentionPlugin: _udecode_plate_core.SlatePlugin<PluginConfig<"mention", {
    insertSpaceAfterMention?: boolean;
} & TriggerComboboxPluginOptions, {}, {
    insert: {
        mention: (options: {
            search: string;
            value: any;
            key?: any;
        }) => void;
    };
}, {}>>;

interface TMentionElement extends TElement {
    value: string;
}
interface TMentionInputElement extends TElement {
    trigger: string;
}
interface TMentionItemBase {
    text: string;
    key?: any;
}

type MentionOnSelectItem<TItem extends TMentionItemBase = TMentionItemBase> = (editor: SlateEditor, item: TItem, search?: string) => void;
declare const getMentionOnSelectItem: <TItem extends TMentionItemBase = TMentionItemBase>({ key, }?: {
    key?: string;
}) => MentionOnSelectItem<TItem>;

export { BaseMentionInputPlugin, BaseMentionPlugin, type MentionConfig, type MentionOnSelectItem, type TMentionElement, type TMentionInputElement, type TMentionItemBase, getMentionOnSelectItem };
